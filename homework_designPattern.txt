single ton，一次只能有一個
老師舉例：銀行給號機
個人舉例：電影院的座票，車票劃位
類別建立物件，server端建立物件，不是由client端new物件
===================================================
factory , 工廠模式，
老師舉例：button，可用在windows或osx上
由factory造物件出來
咖啡，全家或是小7製造出來
功能：被喝
個人舉例：自行車架，客戶要求自行車工廠製造車架
client由中間(工廠)傳來的參數，根據參數建立物件
===================================================
clone，Prototype Pattern(原形模式)
老師舉例：生產成品太貴，所以用clone
依據現有物件造出新的物件，但是有些許不同
個人舉例：高仿品(節省開發成本)
===================================================
Adapter，a透過b與c相接，因為a與c不相容
老師舉例：充電器，iPhone跟Android，轉接器，可以做為轉接頭，兩者能用
不相容的兩者，用adapter相接，讓兩者可以相容
物件已建立好
轉介
格式轉換，格式上做變化
格式不同，作法相同
===================================================
Bridge(橋接模式)，透過api可用不同的方式畫圓
老師舉例：畫圓的程式
介面(是標準的)跟實作是分開的，代理人的概念
格式一樣，作法不同
介面轉換
降低耦合度，透過bridge增加程式的彈性
個人舉例：提款機操作流程
===================================================
Decorator，包一層
老師舉例：盒子放進抽屜，抽屜是桌子一部分，桌子是房間一部份，房間是大樓一部分
一直往外包的概念
東西是component，內容物是東西
老師舉例：像是包裝禮物，例：包裝pizza，魯肉飯→魯肉飯便當
===================================================
facade，與adapter相比是動機的問題
老師舉例：字串先轉成陣列，再由另一個類別做大小寫轉換，再轉換成陣列回傳
寫一個類別當做adapter
網路上有看到一個例子：一個旅客要買捷運票，但是機器只接受銅板不接受紙鈔，所以旅客還要到
另一台紙鈔換硬幣的機台排隊，然後再去只接受硬幣的賣票機台買票，變的旅客要排兩次隊
那就能用facade把2台機器合在一起，使機台能同時接受硬幣跟紙鈔又能賣票，這樣旅客只要排一次隊伍即可
====================================================
observer，觀察者
老師舉例：主題是報紙，observer是訂閱者
主題+訂閱者=observer pattern
個人舉例：youtube訂閱者
====================================================
Command，on與off稱為開關，所以switch等於command
電燈開關可以控制燈亮與暗，可以跟控制開關掛在一起
人是cline端透過command來控制燈泡的開啟或關閉
著重在互動，與adapter不同，是指動態部份
====================================================
Interpreter，像解析器
老師舉例：樹狀架構，根據文法及內容組成，不是自行生成
像內神經網路
用在翻譯上
